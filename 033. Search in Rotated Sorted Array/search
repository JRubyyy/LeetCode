class Solution {
public:
    int binarySearch(vector<int> nums, int l, int r, int target) {
        
        while (l <= r) {
            int mid = l + (r-l)/2;
            if (nums[mid] == target) return mid;
            else if (nums[mid] < target) l = mid + 1;
            else r = mid - 1;
        }
        return -1;
    }
    
    int search(vector<int>& nums, int target) {
        
        if (nums.size() == 0) return -1;
        nums.push_back(-1);
        
        int i = 0;
        while (nums[i] < nums[++ i]);
        
        int pre = binarySearch(nums,0,i-1,target);
        int after = binarySearch(nums,i,nums.size()-2,target);
        return pre != -1 ? pre : after;
    }
};
