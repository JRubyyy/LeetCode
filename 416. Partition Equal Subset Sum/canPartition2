class Solution {
    
public:
    // 背包问题
    bool canPartition(vector<int>& nums) {
        
        int sum = 0;
        for (int i=0; i<nums.size(); i++) {
            assert(nums[i] > 0);
            sum += nums[i];
        }
        
        if (sum%2 != 0) return false;
        
        int n = nums.size();
        // 背包容量
        int C = sum/2;
        vector<int> memo(C+1,false);
        
        // 如果只考虑第一个nums，能否把memo相对应的背包填满
        for (int i=0; i<=C; i++)
            memo[i] = (nums[0] == i);
        
        // 每一次多考虑一个数
        for (int i=1; i<n; i++) 
            for (int j=C; j>=nums[i]; j--) 
                memo[j] = memo[j] || memo[j-nums[i]];
        
        return memo[C];
    }
};
